[00:21:34.108] Namespace(batch_size=1, rand_crop_size=[128], max_epoch=400, accum_iter=1, model='vit_b', input_size=224, norm_pix_loss=False, weight_decay=0.001, lr=0.001, blr=0.001, warmup_epochs=40, data_path='../../../../data/xinglujing/data/amos22/', output_dir='./output_dir', log_dir='./output_dir', device='cuda', seed=0, resume='', start_epoch=0, num_workers=10, model_type='vit_b', checkpoint='../segment-anything-main/sam_vit_b_01ec64.pth', snapshot_path='./log')
[00:21:35.160] checkpoint load msg:_IncompatibleKeys(missing_keys=['image_encoder.pos_embed', 'image_encoder.lin.weight', 'image_encoder.lin.bias', 'image_encoder.blocks.0.mlp.fc1.weight', 'image_encoder.blocks.0.mlp.fc1.bias', 'image_encoder.blocks.0.mlp.fc2.weight', 'image_encoder.blocks.0.mlp.fc2.bias', 'image_encoder.blocks.1.mlp.fc1.weight', 'image_encoder.blocks.1.mlp.fc1.bias', 'image_encoder.blocks.1.mlp.fc2.weight', 'image_encoder.blocks.1.mlp.fc2.bias', 'image_encoder.blocks.2.mlp.fc1.weight', 'image_encoder.blocks.2.mlp.fc1.bias', 'image_encoder.blocks.2.mlp.fc2.weight', 'image_encoder.blocks.2.mlp.fc2.bias', 'image_encoder.blocks.3.mlp.fc1.weight', 'image_encoder.blocks.3.mlp.fc1.bias', 'image_encoder.blocks.3.mlp.fc2.weight', 'image_encoder.blocks.3.mlp.fc2.bias', 'image_encoder.blocks.4.mlp.fc1.weight', 'image_encoder.blocks.4.mlp.fc1.bias', 'image_encoder.blocks.4.mlp.fc2.weight', 'image_encoder.blocks.4.mlp.fc2.bias', 'image_encoder.blocks.5.mlp.fc1.weight', 'image_encoder.blocks.5.mlp.fc1.bias', 'image_encoder.blocks.5.mlp.fc2.weight', 'image_encoder.blocks.5.mlp.fc2.bias', 'image_encoder.blocks.6.mlp.fc1.weight', 'image_encoder.blocks.6.mlp.fc1.bias', 'image_encoder.blocks.6.mlp.fc2.weight', 'image_encoder.blocks.6.mlp.fc2.bias', 'image_encoder.blocks.7.mlp.fc1.weight', 'image_encoder.blocks.7.mlp.fc1.bias', 'image_encoder.blocks.7.mlp.fc2.weight', 'image_encoder.blocks.7.mlp.fc2.bias', 'image_encoder.blocks.8.mlp.fc1.weight', 'image_encoder.blocks.8.mlp.fc1.bias', 'image_encoder.blocks.8.mlp.fc2.weight', 'image_encoder.blocks.8.mlp.fc2.bias', 'image_encoder.blocks.9.mlp.fc1.weight', 'image_encoder.blocks.9.mlp.fc1.bias', 'image_encoder.blocks.9.mlp.fc2.weight', 'image_encoder.blocks.9.mlp.fc2.bias', 'image_encoder.blocks.10.mlp.fc1.weight', 'image_encoder.blocks.10.mlp.fc1.bias', 'image_encoder.blocks.10.mlp.fc2.weight', 'image_encoder.blocks.10.mlp.fc2.bias', 'image_encoder.blocks.11.mlp.fc1.weight', 'image_encoder.blocks.11.mlp.fc1.bias', 'image_encoder.blocks.11.mlp.fc2.weight', 'image_encoder.blocks.11.mlp.fc2.bias', 'image_encoder.norm.weight', 'image_encoder.norm.bias', 'image_encoder.neck.0.weight', 'image_encoder.neck.2.weight', 'prompt_encoder.pe_layer.positional_encoding_gaussian_matrix', 'mask_decoder.output_upscaling.0.weight', 'mask_decoder.output_upscaling.3.weight'], unexpected_keys=[])
